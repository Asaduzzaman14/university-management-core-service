Tue Aug 29 2023 11:2:31 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:5:31 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:8:53 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:28:37 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:29:24 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:34:2 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:35:35 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:38:16 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:38:39 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:


Operation 'createOne' for model 'OfferedCourse' does not match any query.
Tue Aug 29 2023 11:43:43 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:

{
  data: {
    courseId: "afaea6b9-1368-4585-81db-a87018bc8d8f",
    academicDepartmentId: "c952b432-79f1-4733-8a34-31aafb74e649",
    semesterRegistrationId: undefined,
+   course: {
+     create: CourseCreateWithoutOfferedCoursesInput | CourseUncheckedCreateWithoutOfferedCoursesInput,
+     connectOrCreate: CourseCreateOrConnectWithoutOfferedCoursesInput,
+     connect: CourseWhereUniqueInput
+   }
  }
}

Argument `course` is missing.
Tue Aug 29 2023 11:44:28 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:

{
  data: {
    courseId: "afaea6b9-1368-4585-81db-a87018bc8d8f",
    academicDepartmentId: "c952b432-79f1-4733-8a34-31aafb74e649",
    semesterRegistrationId: undefined,
+   course: {
+     create: CourseCreateWithoutOfferedCoursesInput | CourseUncheckedCreateWithoutOfferedCoursesInput,
+     connectOrCreate: CourseCreateOrConnectWithoutOfferedCoursesInput,
+     connect: CourseWhereUniqueInput
+   }
  }
}

Argument `course` is missing.
Tue Aug 29 2023 11:45:11 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:

{
  data: {
    courseId: "afaea6b9-1368-4585-81db-a87018bc8d8f",
    academicDepartmentId: "c952b432-79f1-4733-8a34-31aafb74e649",
    semesterRegistrationId: undefined,
+   course: {
+     create: CourseCreateWithoutOfferedCoursesInput | CourseUncheckedCreateWithoutOfferedCoursesInput,
+     connectOrCreate: CourseCreateOrConnectWithoutOfferedCoursesInput,
+     connect: CourseWhereUniqueInput
+   }
  }
}

Argument `course` is missing.
Tue Aug 29 2023 11:46:11 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:

{
  data: {
    courseId: "afaea6b9-1368-4585-81db-a87018bc8d8f",
    academicDepartmentId: "c952b432-79f1-4733-8a34-31aafb74e649",
    semesterRegistrationId: undefined,
+   course: {
+     create: CourseCreateWithoutOfferedCoursesInput | CourseUncheckedCreateWithoutOfferedCoursesInput,
+     connectOrCreate: CourseCreateOrConnectWithoutOfferedCoursesInput,
+     connect: CourseWhereUniqueInput
+   }
  }
}

Argument `course` is missing.
Tue Aug 29 2023 11:46:35 } [UM] error: 
Invalid `prisma.offeredCourse.create()` invocation:

{
  data: {
    courseId: "afaea6b9-1368-4585-81db-a87018bc8d8f",
    academicDepartmentId: "c952b432-79f1-4733-8a34-31aafb74e649",
    semesterRegistrationId: undefined,
+   course: {
+     create: CourseCreateWithoutOfferedCoursesInput | CourseUncheckedCreateWithoutOfferedCoursesInput,
+     connectOrCreate: CourseCreateOrConnectWithoutOfferedCoursesInput,
+     connect: CourseWhereUniqueInput
+   }
  }
}

Argument `course` is missing.
